<?xml version='1.0'  encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC
    "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
    "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd">


<html xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:mml="http://www.w3.org/1998/Math/MathML"
  xmlns:svg="http://www.w3.org/2000/svg"
  xml:lang="en">

<!--
  Copyright (C)
  Sesamath 2013
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->


<head>
  <title>Hill</title>
<link rel="stylesheet" href="style2/impr.css" type="text/css" />
<link rel='stylesheet' href='style2/style.css' type='text/css' /><script   type="text/javascript"  src="xcas/base.js">
</script>
<script   type="text/javascript"  src="live.js">
</script>
<script  type="text/javascript">
// <![CDATA[
function recadre(){
  // uniquement pout internet Explorer
  if (!window.ActiveXObject)
    return;
  var elem=document.getElementById("canevas");
  if (elem.style.height<document.body.clientHeight)
    elem.style.height=document.body.clientHeight; 
}
// ]]>
</script>
<script language="xcas">
// <![CDATA[
Hill(a,b,c,d,mes):={
local m,l1,l,l3,k,j,M;
si (a*d-b*c)/2==iquo(a*d-b*c,2) ou (a*d-b*c)/13==iquo(a*d-b*c,13) alors
  afficher "Les coefficients de la clé doivent vérifier PGCD(ad-bc,26)=1";
sinon
  M:=[[a,c],[b,d]];
  l3:=[];
  m:=string(mes);
  l1:=asc(m);
  l:=length(l1);
  l1:=l1-makelist(65,1,l);
  si l/2!=iquo(l,2) alors
    afficher "Il faut un nombre pair de lettres!";
  sinon
    pour k de 0 jusque l-1 pas 2 faire
      l3:=concat(l3,[l1[k],l1[k+1]]*M);
    fpour;
    pour j  de 0 jusque l-1 faire
      l3[j]:=irem(l3[j],26)+65;
    fpour;
    afficher char(l3); 
  fsi;
fsi;
}
;
casse(a,b,c,d):={
afficher inv([[a,b],[c,d]]),inv([[a,b],[c,d]])[0,0],inv([[a,b],[c,d]])[0,1],inv([[a,b],[c,d]])[1,0],inv([[a,b],[c,d]])[1,1]
}
;
deHill(a,b,c,d,mes):={
local m,l1,l,l3,k,j,M;
si (a*d-b*c)/2==iquo(a*d-b*c,2) ou (a*d-b*c)/13==iquo(a*d-b*c,13) alors
  afficher "Les coefficients de la clé doivent vérifier PGCD(ad-bc,26)=1";
sinon
  M:=inv([[a,c],[b,d]]);
  l3:=[];
  m:=string(mes);
  l1:=asc(m);
  l:=length(l1);
  l1:=l1-makelist(65,1,l);
  si l/2!=iquo(l,2) alors
    afficher "Il faut un nombre pair de lettres!";
  sinon
    pour k de 0 jusque l-1 pas 2 faire
      l3:=concat(l3,[l1[k],l1[k+1]]*M);
    fpour;
    pour j  de 0 jusque l-1 faire
      l3[j]:=irem(l3[j],26)+65;
    fpour;
    afficher char(l3); 
  fsi;
fsi;
}
;

// ]]>
</script>

</head>
<body onload="xcasBalise();fabExo(-1);recadre()">
    
 
<div id='canevas'>
<h1 align="center">
 Chiffrement de Hill
</h1>
<h2>
 Codage
</h2>
<p>
 On souhaite coder un texte &#233;crit en 
 <b>
  majuscule, sans accent, ni ponctuation, ni s&#233;paration
 </b>
 .
 <br/>
 Il s'agit d'un codage polygraphique (par blocs).
 <br/>
 On groupe les lettres du message par bloc de 2.
 <br/>
 Entrez les coefficients de la matrice :
</p>
<p align="center">
 y1 =
 <fab>
  &#160;&#160;
  <input id="fab0" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
  x1 +
 <fab>
  &#160;&#160;
  <input id="fab1" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
  x2
</p>
<p align="center">
 y2 =
 <fab>
  &#160;&#160;
  <input id="fab2" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
  x1 +
 <fab>
  &#160;&#160;
  <input id="fab3" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
  x2
</p>
<p align="left">
 Entrez le message &#224; coder :
</p>
<p align="left">
 <fab>
  &#160;&#160;
  <input id="fab4" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
 <br/>
</p>
<p align="left">
 Puis on code le message &#224; partir de l'algorithme de codage.
 <br/>
</p>
<div align="left">
 <ul>
  <li>
   &#160; Apr&#232;s avoir transformer le texte en une liste de nombres, chaque couple d'entiers (x1;x2) est chiffr&#233; en un couple d'entiers (y1;y2) tel que : y1&#8801;a*x1+b*x2[26] et y2&#8801;c*x1+d*x2[26]. Puis on transforme la liste de nombres en texte.
  </li>
 </ul>
</div>
<p align="left">
 <fab>
  &#160;&#160;
  <input type="button" id="fab5" value="codage" onclick="xc.eval('Hill','fab0','fab1','fab2','fab3','fab4');xc.imprimeMml('fab6',0,true,true);xc.imprimeSvg(fab.graphique,true);" title="" cible="fab6" arguments="fab0 fab1 fab2 fab3 fab4" xcas="Hill"/>
  &#160;
 </fab>
 <br/>
</p>
<p class="sortie" onmousedown="return false" onmouseup="fabEcrit(this)" horsligne="1" id="fab6" title="">
 &#8230;
</p>
<p>
 <u>
  <b>
   Explication : 
  </b>
 </u>
 <br/>
 Le chiffrement de Hill utilise la matrice M telle que Y=M*X avec y1&#8801;a*x1+b*x2[26]&#160; et y2&#8801;c*x1+d*x2[26].
 <br/>
 Pour pouvoir d&#233;coder le message, il faut M soit inversible dans&#160; &#8484;/26&#8484; et donc que PGCD(ad-bc,26)=1
 <br/>
 Pour d&#233;coder le message il suffit donc d'utiliser le m&#234;me programme avec la matrice inverse.
</p>
<p>
 <u>
  <b>
   Remarque :
  </b>
 </u>
 <br/>
 La cl&#233; de codage (matrice M) ne doit pas &#234;tre connue. Car il devient alors facile de d&#233;coder le message.
 <br/>
 Il se pose alors le probl&#232;me de transmettre la cl&#233; priv&#233;e.
</p>
<h2>
 D&#233;codage
</h2>
<p align="left">
 <fab>
  &#160;&#160;
  <input type="button" id="fab7" value="casse" onclick="xc.eval('casse','fab0','fab1','fab2','fab3');xc.imprimeMml('fab8',0,true,true);xc.imprimeSvg(fab.graphique,true);xc.imprimeMml('fab12',1,true,true);xc.imprimeSvg(fab.graphique,true);xc.imprimeMml('fab13',2,true,true);xc.imprimeSvg(fab.graphique,true);xc.imprimeMml('fab14',3,true,true);xc.imprimeSvg(fab.graphique,true);xc.imprimeMml('fab15',4,true,true);xc.imprimeSvg(fab.graphique,true);" title="" cible="fab8 fab12 fab13 fab14 fab15" arguments="fab0 fab1 fab2 fab3" xcas="casse"/>
  &#160;
 </fab>
  La cl&#233; de d&#233;codage est :&#160;
 <fab>
   &#160;
  <span class="sortieDL" onmousedown="return false" onmouseup="fabEcrit(this)" id="fab8" title="">
   &#8230;
  </span>
  &#160; &#160;
 </fab>
 soit :&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; x1 =
 <fab>
  &#160;
  <span class="sortieDL" onmousedown="return false" onmouseup="fabEcrit(this)" id="fab12" title="">
   &#8230;
  </span>
  &#160;&#160;
 </fab>
  y1 +
 <fab>
  &#160;
  <span class="sortieDL" onmousedown="return false" onmouseup="fabEcrit(this)" id="fab13" title="">
   &#8230;
  </span>
  &#160;&#160;
 </fab>
  y2&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 
 et&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; x2 =
 <fab>
  &#160;
  <span class="sortieDL" onmousedown="return false" onmouseup="fabEcrit(this)" id="fab14" title="">
   &#8230;
  </span>
  &#160;&#160;
 </fab>
 y1 +
 <fab>
  &#160;
  <span class="sortieDL" onmousedown="return false" onmouseup="fabEcrit(this)" id="fab15" title="">
   &#8230;
  </span>
  &#160;&#160;
 </fab>
 y2
 <br/>
</p>
<p>
 Entrez le message &#224; d&#233;coder :
</p>
<p>
 <fab>
  &#160;&#160;
  <input id="fab11" onclick="fabEcrit(this)" onchange="" onkeypress="this.focus()" onkeyup="fabChapeau(this,event)" title=""/>
  &#160;
 </fab>
  (par exemple, faire copier-coller du message cod&#233;)
 <br type="_moz"/>
</p>
<p>
 <fab>
  &#160;&#160;
  <input type="button" id="fab9" value="decodage" onclick="xc.eval('deHill','fab0','fab1','fab2','fab3','fab11');xc.imprimeMml('fab10',0,true,true);xc.imprimeSvg(fab.graphique,true);" title="" cible="fab10" arguments="fab0 fab1 fab2 fab3 fab11" xcas="deHill"/>
  &#160;
 </fab>
 <br type="_moz"/>
</p>
<p class="sortie" onmousedown="return false" onmouseup="fabEcrit(this)" horsligne="1" id="fab10" title="">
 &#8230;
</p>
</div>
<input id='recepteurs' type='hidden' value=''/>

<script></script>

</body>
</html>